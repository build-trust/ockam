[bans]
multiple-versions = "deny"
# Dependencies cannot be specified with the "*" version.
wildcards = "deny"

[licenses]
unlicensed = "deny"
copyleft = "deny"
confidence-threshold = 0.95
allow = [
  "Apache-2.0",
  "MIT",
  "BSD-3-Clause",
  "BSD-2-Clause",
  "0BSD",
  "ISC",
  "BlueOak-1.0.0",
  "BSL-1.0",
]
exceptions = [
  { allow = ["LicenseRef-Ring-ISC-OpenSSL"], name = "ring", version = "*" },
  { allow = ["Unicode-DFS-2016"], name = "unicode-ident", version = "*" },
  { allow = ["Apache-2.0 WITH LLVM-exception"], name = "wast", version = "*" },
  { allow = ["Apache-2.0 WITH LLVM-exception"], name = "wasm-encoder", version = "*" },

  # used by ockam_app_lib only as a build dependency
  { allow = ["MPL-2.0"], name = "cbindgen", version = "*" },
]

[[licenses.clarify]]
name = "ring"
expression = "LicenseRef-Ring-ISC-OpenSSL"
license-files = [
  { path = "LICENSE", hash = 0xbd0eed23 },
]

[[licenses.clarify]]
name = "webpki"
expression = "ISC"
license-files = [
  { path = "LICENSE", hash = 0x001c7e6c },
]

[[licenses.clarify]]
name = "rustls-webpki"
expression = "ISC"
license-files = [
  { path = "LICENSE", hash = 0x001c7e6c },
]

[advisories]
unmaintained = "deny"
vulnerability = "deny"
yanked = "warn"
ignore = [
  # `serde_cbor` is unmaintained
  # (https://rustsec.org/advisories/RUSTSEC-2021-0127.html)
  #
  # Pulled-in by `cddl-cat` which is used for validating
  # CDDL schema conformance in tests.
  "RUSTSEC-2021-0127",

  # `safemem` is unmaintained and archived
  # (https://rustsec.org/advisories/RUSTSEC-2023-0081)
  #
  # Pulled-in by `syntect` which is used for syntax and code highlighting.
  "RUSTSEC-2023-0081",

  # cbindgen (used to generate C header at build time)
  # may dereference unaligned pointer access on windows
  # under special conditions
  "RUSTSEC-2021-0145",
]
# Users who require or prefer Git to use SSH cloning instead of HTTPS,
# such as implemented via "insteadOf" rules in Git config, can still
# successfully fetch advisories with this enabled.
#
# See also:
# https://doc.rust-lang.org/cargo/reference/config.html#netgit-fetch-with-cli
# https://embarkstudios.github.io/cargo-deny/checks/advisories/cfg.html#the-git-fetch-with-cli-field-optional
# https://github.com/EmbarkStudios/cargo-deny/pull/420
git-fetch-with-cli = true
