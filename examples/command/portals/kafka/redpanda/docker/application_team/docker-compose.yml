---
version: "3.7"
networks:
  application_team:
      driver: bridge
services:
  # Start a consumer node with ockam.
  #
  # Read kafka_client.dockerfile and run_ockam.sh to understand
  # how the node is set up.
  consumer:
    build:
      context: .
      dockerfile: kafka_client.dockerfile
    environment:
      ENROLLMENT_TICKET: ${CONSUMER_ENROLLMENT_TICKET:-}
      OCKAM_DEVELOPER: ${OCKAM_DEVELOPER:-false}
    networks:
      - application_team
    command:
      - -c
      - (
          sleep 10;
          echo "";
          echo "Messages sent from producers will appear shortly.";
          echo "It may take a couple of minutes for the first message to appear.";
          echo "=======================================================================";
          echo "Press Ctrl+C to stop the container at any time, then execute "\
          "'./run.sh cleanup' to remove all containers.";
          echo "";
          kafka-console-consumer.sh --topic demo --bootstrap-server 127.0.0.1:9092 --max-messages 8;
          if [ "$?" == "0" ]; then
            echo "";
            echo "The example run was successful ü•≥";
            echo "The consumer was able to decrypt messages, Redpanda only saw encrypted messages";
            echo "";
          fi;
          echo "=======================================================================";
          echo "Open the console at http://127.0.0.1:8080 to see the encryted messages.";
          echo "=======================================================================";
          tail -f /dev/null;
        )
  producer:
    build:
      context: .
      dockerfile: kafka_client.dockerfile
    environment:
      ENROLLMENT_TICKET: ${PRODUCER_ENROLLMENT_TICKET:-}
    networks:
      - application_team
    command:
      - -c
      - (
          MESSAGES=(
            "Message - üî•"
            "Message - üåü"
            "Message - üöÄ"
            "Message - üê∑"
            "Message - ü¶Å"
            "Message - ü¶ä"
            "Message - üê∞"
            "Message - üêÆ"
          );
          sleep 10;
          for n in {0..7}; do
            sleep 2;
            echo -n $${MESSAGES[n]} | kafka-console-producer.sh
              --topic demo
              --bootstrap-server 127.0.0.1:9092
              --producer-property request.timeout.ms=30000;
          done;
          tail -f /dev/null
        )
