---
networks:
  application_team:
      driver: bridge
services:
  # Start a consumer node with ockam.
  #
  # Read kafka_client.dockerfile and run_ockam.sh to understand
  # how the node is set up.
  consumer:
    container_name: application_team-consumer
    build:
      context: .
      dockerfile: ../kafka_client.dockerfile
      args:
        OCKAM_VERSION: ${OCKAM_VERSION:-latest}
    volumes:
      - ./ockam-node.yaml:/ockam-node.yaml
    environment:
      ENROLLMENT_TICKET: ${CONSUMER_ENROLLMENT_TICKET:-}
      OCKAM_DEVELOPER: ${OCKAM_DEVELOPER:-false}
    networks:
      - application_team
    command:
      - -c
      - (
          set -e

          sleep 10

          ockam node create ./ockam-node.yaml --enrollment-ticket $${ENROLLMENT_TICKET} &

          sleep 14

          echo "";
          echo "Messages sent from producers will appear shortly.";
          echo "It may take a couple of minutes for the first message to appear.";
          echo "=======================================================================";
          echo "Press Ctrl+C to stop the container at any time, then execute "\
          "'./run.sh cleanup' to remove all containers.";
          echo "";
          kafka-console-consumer.sh --topic application_team_topic --timeout-ms 50000 --bootstrap-server 127.0.0.1:9092 --max-messages 8 | tee output.txt;
          if [[ ! -s output.txt ]]; then
            echo "Failed to receive messages";
            exit 1;
          fi;

          echo "";
          echo "The example run was successful ðŸ¥³.";
          echo "The consumer was able to decrypt encrypted fields";
          echo "";

          echo "=======================================================================";
          echo "Open the console at http://127.0.0.1:8080 to see the encryted fields in message.";
          echo "=======================================================================";
          tail -f /dev/null;
        )
