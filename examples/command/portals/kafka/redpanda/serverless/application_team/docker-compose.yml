---
version: "3.7"
networks:
  application_team:
      driver: bridge
services:
  # Start a consumer node with ockam.
  #
  # Read kafka_client.dockerfile and run_ockam.sh to understand
  # how the node is set up.
  consumer:
    build:
      context: .
      dockerfile: kafka_client.dockerfile
    environment:
      ENROLLMENT_TICKET: ${CONSUMER_ENROLLMENT_TICKET:-}
    networks:
      - application_team
    volumes:
      - ./volumes/config:/etc/kafka
      - ./volumes/consumer:/mnt
    command:
      - -c
      - (
          sleep 10;
          echo "";
          echo "Messages sent from the producer will appear shortly.";
          echo "It may require up to a few of minutes for the messages to appear.";
          echo "=======================================================================";
          echo "Press Ctrl+C to stop the container at any time, then execute "\
          "'./run.sh cleanup' to remove all containers.";
          echo "";
          first=1;
          for n in {1..3}; do
            kafka-console-consumer.sh --topic demo --bootstrap-server 127.0.0.1:9092 --max-messages 1 --consumer.config /etc/kafka/kafka.config;
            if [ "$?" == "0" ] && [ "$$first" == "1" ]; then
              echo "The example run was successful ðŸ¥³";
              first=0;
            fi;
          done;
          echo "=======================================================================";
          echo "Open the console at https://cloud.redpanda.com/clusters to see the encryted messages.";
          echo "=======================================================================";
          tail -f /dev/null;
        )
  producer:
    build:
      context: .
      dockerfile: kafka_client.dockerfile
    environment:
      ENROLLMENT_TICKET: ${PRODUCER_ENROLLMENT_TICKET:-}
    networks:
      - application_team
    volumes:
      - ./volumes/config:/etc/kafka
      - ./volumes/producer:/mnt
    command:
      - -c
      - (
          sleep 5;
          for counter in {1..5}; do
            sleep 5;
            echo -n "Message number $${counter}" | kafka-console-producer.sh
              --topic demo
              --bootstrap-server 127.0.0.1:9092
              --producer-property request.timeout.ms=30000
              --producer.config /etc/kafka/kafka.config;
          done;
          tail -f /dev/null
        )
