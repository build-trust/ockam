name: 'Lint Commits'
runs:
  using: 'composite'
  steps:
      - name: Checkout
        if: github.event_name != 'pull_request'
        uses: actions/checkout@$CHECKOUT_VERSION 
        with:
          fetch-depth: 0 # checkout full tree

      - name: Checkout (Pull Request)
        if: github.event_name == 'pull_request'
        uses: actions/checkout@$CHECKOUT_VERSION 
        with:
          fetch-depth: 0 # checkout full tree
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get commit information from Github (Pull Request)
        if: github.event_name == 'pull_request'
        run: gh api repos/${REPO_NAME}/pulls/${{ github.event.number }}/commits > commits.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set FIRST_COMMIT To Begin Linting (Pull Request)
        if: github.event_name == 'pull_request'
        run: |
          pull_request_commits_length=$(cat commits.json | jq '. | length')
          echo "Number of commits in pull requests are $pull_request_commits_length"
          echo "FIRST_COMMIT=HEAD~${pull_request_commits_length}" >> $GITHUB_ENV
      
      - name: Check no merge commits
        run: |
          merge_commit_count=$(git rev-list --no-walk --count --merges $FIRST_COMMIT..HEAD)
          if [ "$merge_commit_count" != "0" ]; then
            echo "
              Our develop branch follows a linear history and cannot have merge commits.
              Please rebase to develop.
            " && exit 1
          fi

      