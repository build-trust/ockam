name: Rust

permissions:
  contents: read

on:
  merge_group:
  pull_request:
    paths:
      - ".github/workflows/rust.yml"
      - ".github/actions/**"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "implementations/rust/ockam/ockam_command/tests/**"
      - "**.gradle"
      - "tools/gradle/**"
      - "gradlew"
      - "gradlew.bat"
  push:
    paths:
      - ".github/workflows/rust.yml"
      - ".github/actions/**"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "implementations/rust/ockam/ockam_command/tests/**"
      - "**.gradle"
      - "tools/gradle/**"
      - "gradlew"
      - "gradlew.bat"
    branches:
      - develop
  schedule:
    # At 1 am.
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      commit_sha:
        description: Commit SHA, to run workflow
      ockam_command_cli_version:
        description: SHA to build Ockam command CLI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint-cargo-toml:
    name: Rust - lint-cargo-toml
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - name: Install Dprint
        run: npm install -g dprint
      - name: Check Formatting
        run: dprint check --config tools/dprint/dprint.json

  lint_cargo_fmt_check:
    name: Rust - lint_cargo_fmt_check
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew lint_cargo_fmt_check

  lint_cargo_readme:
    name: Rust - lint_cargo_readme
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew lint_cargo_readme

  lint_cargo_clippy:
    name: Rust - lint_cargo_clippy
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew lint_cargo_clippy
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  lint_cargo_deny:
    name: Rust - lint_cargo_deny
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew lint_cargo_deny

  build_docs:
    name: Rust - build_docs
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew build_docs
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  build:
    name: Rust - build
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          npm install @sveltejs/kit
          pnpm run build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew build
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  build_examples:
    name: Rust - build_examples
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew build_examples
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  test:
    name: Rust - test
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    services:
      ockam_cloud:
        image: ghcr.io/build-trust/ockam-cloud-node@sha256:518314876a5b07c263b88995792335c4426d940c10e5e638a60e66776d86cff5
    env:
      CLOUD_ADDRESS: ockam_cloud:4000
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          npm install @sveltejs/kit
          pnpm run build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew test
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  check_no_std:
    name: Rust - check_no_std
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - run: |
          rustc --version
          rustup target add thumbv7em-none-eabihf
          cd implementations/rust/ockam/ockam
          export RUSTFLAGS='-Dwarnings'
          cargo check --target thumbv7em-none-eabihf --no-default-features --features 'no_std alloc software_vault'

          # no_std example project
          cd ../../../../examples/rust/example_projects/no_std
          cargo check --example hello
          # RUSTFLAGS='-Dwarnings' cargo check --example hello --no-default-features --features 'alloc no_std'
          # RUSTFLAGS='-Dwarnings' cargo +nightly check --example hello --target thumbv7em-none-eabihf --no-default-features --features="qemu"
          # RUSTFLAGS='-Dwarnings' cargo +nightly check --example hello --target thumbv7em-none-eabihf --no-default-features --features="atsame54"
          # RUSTFLAGS='-Dwarnings' cargo +nightly check --example hello --target thumbv7em-none-eabihf --no-default-features --features="stm32f4"

      - uses: ./.github/actions/cargo_target_dir_pre_cache

  check_tag:
    name: Rust - check_tag
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          RUSTFLAGS='-Dwarnings' cargo check --features tag
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  check_cargo_update:
    name: Rust - check_cargo_update
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - run: |
          rustc --version
          cd examples/rust/get_started
          rm -rf Cargo.lock
          cargo update
          RUSTFLAGS='--cfg tokio_unstable -Dwarnings' cargo check
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  check_nightly:
    name: Rust - check_nightly
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - run: rustup default nightly-2023-03-15
      - run: rustup update nightly
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          mkdir build
      - run: |
          rustc --version
          RUSTFLAGS='--cfg tokio_unstable -Dwarnings' cargo check
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  build_nightly:
    name: Rust - build_nightly
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - run: rustup default nightly-2023-03-15
      - run: rustup update nightly
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          npm install @sveltejs/kit
          pnpm run build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew build
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  test_nightly:
    name: Rust - test_nightly
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - run: rustup default nightly-2023-03-15
      - run: rustup update nightly
      - uses: ./.github/actions/gradle_cache
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - working-directory: implementations/typescript/ockam/ockam_app
        run: |
          npm install @sveltejs/kit
          pnpm run build
      - run: |
          rustc --version
          cd implementations/rust && ../../gradlew test
        env:
          NIGHTLY_CI: 1
      - uses: ./.github/actions/cargo_target_dir_pre_cache

  test_ockam_command:
    name: Rust - test_ockam_command
    strategy:
      fail-fast: false
      matrix:
        build: [linux_86]
        include:
        - build: linux_86
          os: ubuntu-20.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          container: "ghcr.io/build-trust/ockam-builder@sha256:5ab42598e35509cad3ea9c1e1bd0ed135ed1340c6ae44b762b1c8bbec31d5c68"
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Checkout ockam cli repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ inputs.ockam_command_cli_version != '' && inputs.ockam_command_cli_version || inputs.commit_sha  }}
          path: ockam_cli

      - name: Checkout ockam bats repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ inputs.commit_sha }}
          path: ockam_bats

      - name: Use cache cargo_home
        uses: ./ockam_bats/.github/actions/cargo_home_cache
      - name: Use cache cargo_target
        uses: ./ockam_bats/.github/actions/cargo_target_dir_cache
        with:
          ockam_dir: ockam_cli

      - name: Build Binary
        shell: bash
        working-directory: ockam_cli
        run: |
          rustc --version
          set -x
          cargo build --bin ockam
          echo "PATH=$(pwd)/target/debug:$PATH" >> $GITHUB_ENV;

      - name: Run Script On Ubuntu
        working-directory: ockam_bats
        shell: bash
        run: |
          ockam --version
          echo $(which ockam)
          bats implementations/rust/ockam/ockam_command/tests/bats;
        env:
          OCKAM_DISABLE_UPGRADE_CHECK: 1

      - name: Prep cache cargo_target before persisting
        uses: ./ockam_bats/.github/actions/cargo_target_dir_pre_cache
        with:
          ockam_dir: ockam_cli

  ockam_command_cross_build:
    name: Rust - ockam_command_cross_build
    strategy:
      fail-fast: false
      matrix:
        build: [linux_armv7, macos_silicon]
        include:
        - build: linux_armv7
          os: ubuntu-20.04
          toolchain: stable
          target: armv7-unknown-linux-musleabihf
          use-cross-build: true
        - build: macos_silicon
          os: macos-latest
          toolchain: stable
          target: aarch64-apple-darwin
          use-cross-build: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab
        with:
          ref: ${{ inputs.commit_sha }}

      - uses: ./.github/actions/build_binaries
        with:
          use_cross_build: ${{ matrix.use-cross-build }}
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          platform_operating_system: ${{ matrix.os }}

  test_orchestrator_ockam_command:
    name: Rust - test_orchestrator_ockam_command
    runs-on: ubuntu-20.04
    container: ghcr.io/build-trust/artifacts-helper:latest
    if: github.event_name == 'merge_group' || github.event_name == 'workflow_dispatch'
    permissions:
      contents: read
      packages: read

    steps:
      - name: Run Ockam Bats Test On Development Cluster
        uses: build-trust/.github/actions/run_bats_test@custom-actions
        with:
          perform_ockam_enroll: 'true'
          script_path: "/artifacts-scripts"
          ockam_repository_ref: ${{ inputs.commit_sha }}
          controller_id: ${{ secrets.ORCHESTRATOR_DEVELOPMENT_CONTROLLER_ID }}
          controller_addr: ${{ secrets.ORCHESTRATOR_DEVELOPMENT_CONTROLLER_ADDRESS }}
          ockam_cli_repository_ref: ${{ inputs.ockam_command_cli_version }}
