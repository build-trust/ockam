name: Rust Cargo Lock Lint

permissions:
  contents: read

on:
  merge_group:
  pull_request:
    paths:
      - ".github/workflows/rust-lint-cargo-lock.yml"
      - ".github/actions/**"
      - "**.toml"
      - "**/Cargo.lock"
  push:
    paths:
      - ".github/workflows/rust-lint-cargo-lock.yml"
      - ".github/actions/**"
      - "**.toml"
      - "**/Cargo.lock"
    branches:
      - develop
  workflow_dispatch:
    inputs:
      commit_sha:
        description: Git commit sha, on which, to run this workflow

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  lint_cargo_lock:
    name: Rust - lint_cargo_lock
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:0a4c3640f78650e35207a047891e55863d8648a9333ea0bcfe03f09e2d57480c
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3
        with:
          ref: ${{ github.event.inputs.commit_sha }}
      - uses: ./.github/actions/cargo_home_cache
      - uses: ./.github/actions/cargo_target_dir_cache
      - name: Check whether Cargo.lock is same as CI-generated Cargo.lock
        run: |
          old_hash=`sha384sum Cargo.lock`
          rm Cargo.lock
          RUSTFLAGS='--cfg tokio_unstable -Dwarnings' cargo check
          expected_hash=`sha384sum Cargo.lock`
          if [ "$old_hash" = "$expected_hash" ]; then
              echo "Cargo.lock hash matches CI-generated Cargo.lock hash"
          else
              echo "Cargo.lock hash does not match CI-generated Cargo.lock hash. Expected: $expected_hash Got: $old_hash" && exit 1
          fi
      - uses: ./.github/actions/cargo_target_dir_pre_cache
