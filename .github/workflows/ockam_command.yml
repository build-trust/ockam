name: Ockam Command Test

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: SHA to test workflow
  pull_request:
    paths:
      - ".github/workflows/ockam_command.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "implementations/rust/ockam/ockam_command/tests/commands.bats"
      - ".github/actions/**"

  push:
    paths:
      - ".github/workflows/ockam_command.yml"
      - "**.rs"
      - "**.toml"
      - "**/Cargo.lock"
      - "implementations/rust/ockam/ockam_command/tests/commands.bats"
      - ".github/actions/**"
  schedule:
    - cron: "0 1 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  OCKAM_DISABLE_UPGRADE_CHECK: 1

jobs:
  ockam_command_test:
    name: Test Ockam Command
    strategy:
      fail-fast: false
      matrix:
        build: [linux_86]
        include:
        - build: linux_86
          os: ubuntu-20.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          container: "ghcr.io/build-trust/ockam-builder@sha256:35ca467816e36a5bd16fcaa31141d0fd9507df94b8672fb02bc86b939746c889"
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          ref: ${{ github.event.inputs.release_branch }}

      - name: Build Binary
        shell: bash
        run: |
          set -x
          cargo build --bin ockam

      - name: Run Script On Ubuntu
        if: matrix.build == 'linux_86'
        shell: bash
        run: |
          export PATH=$(pwd)/target/debug:$PATH;
          cd implementations/rust/ockam/ockam_command/tests;
          bats commands.bats;
