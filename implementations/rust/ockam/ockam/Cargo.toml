[package]
authors = ["Ockam Developers"]
categories = [
    "cryptography",
    "asynchronous",
    "authentication",
    "network-programming",
    "embedded",
]
description = "End-to-end encryption and mutual authentication for distributed applications."
edition = "2021"
exclude = ["tests/**"]
homepage = "https://github.com/build-trust/ockam"
keywords = [
    "ockam",
    "crypto",
    "cryptography",
    "network-programming",
    "encryption",
]
license = "Apache-2.0"
name = "ockam"
readme = "README.md"
repository = "https://github.com/build-trust/ockam/tree/develop/implementations/rust/ockam/ockam"
version = "0.70.0"
rust-version = "1.56.0"
publish = true

[package.metadata.docs.rs]
all-features = false
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std", "ockam_transport_tcp", "software_vault", "software_vault_storage", "noise_xx"]
software_vault = [
    "ockam_vault",
    "ockam_channel/software_vault",
]
software_vault_storage = ["software_vault", "ockam_vault/storage"]
noise_xx = ["ockam_key_exchange_xx", "ockam_channel/noise_xx"]

# Feature (enabled by default): "std" enables functionality expected to
# be available on a standard platform.
std = [
    "alloc",
    "data-encoding/alloc",
    "ockam_core/std",
    "ockam_node/std",
    "ockam_macros/std",
    "ockam_vault/std",
    "ockam_channel/std",
    "ockam_key_exchange_core/std",
    "ockam_key_exchange_xx/std",
    "ockam_identity/std",
    "ockam_abac/std",
    "rand/default",
    "serde/std",
]

# Feature: "no_std" enables functionality required for platforms
# without the standard library, requires nightly.
no_std = [
    "ockam_core/no_std",
    "ockam_node/no_std",
    "ockam_macros/no_std",
    "ockam_vault/no_std",
    "ockam_channel/no_std",
    "ockam_key_exchange_core/no_std",
    "ockam_key_exchange_xx/no_std",
    "ockam_identity/no_std",
    "ockam_abac/no_std",
]

# Feature: "alloc" enables support for heap allocation (implied by `feature = "std"`)
alloc = [
    "data-encoding/alloc",
    "ockam_core/alloc",
    "ockam_node/alloc",
    "ockam_vault/alloc",
    "ockam_channel/alloc",
    "ockam_key_exchange_core/alloc",
    "ockam_key_exchange_xx/alloc",
    "ockam_identity/alloc",
    "ockam_abac/alloc",
    "serde/alloc",
]

[[test]]
name = "tests"
path = "tests/main.rs"

[dependencies]
ockam_core = { path = "../ockam_core", version = "^0.64.0", default-features = false }
ockam_macros = { path = "../ockam_macros", version = "^0.18.0", default_features = false }
ockam_node = { path = "../ockam_node", version = "^0.67.0", default-features = false }
ockam_vault = { path = "../ockam_vault", version = "^0.60.0", default_features = false, optional = true }
ockam_channel = { path = "../ockam_channel", version = "^0.64.0", default_features = false }
ockam_transport_tcp = { path = "../ockam_transport_tcp", version = "^0.65.0", optional = true }
ockam_key_exchange_core = { path = "../ockam_key_exchange_core", version = "^0.55.0", default_features = false }
ockam_key_exchange_xx = { path = "../ockam_key_exchange_xx", version = "^0.60.0", default_features = false, optional = true }
ockam_identity = { path = "../ockam_identity", version = "^0.58.0", default_features = false }
ockam_abac = { path = "../ockam_abac", version = "^0.4.0", default_features = false }
arrayref = "0.3"
data-encoding = { version = "2.3.2", default-features = false }
minicbor = { version = "0.18.0", features = ["alloc", "derive"] }
serde = { version = "1.0", default-features = false, features = ["derive"] }
sha2 = { version = "0.9", default-features = false }
tracing = { version = "0.1", default-features = false }
rand = { version = "0.8", default-features = false }
hex = { version = "0.4", default-features = false }
dyn-clone = "1.0"

[dev-dependencies]
ockam_vault = { path = "../ockam_vault", version = "^0.60.0" }
ockam_key_exchange_xx = { path = "../ockam_key_exchange_xx", version = "^0.60.0" }
trybuild = { version = "1.0", features = ["diff"] }
serde_json = "1.0"
rand_xorshift = "0.3"
