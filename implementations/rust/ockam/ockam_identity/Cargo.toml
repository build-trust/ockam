[package]
name = "ockam_identity"
version = "0.85.0"
authors = ["Ockam Developers"]
categories = ["cryptography", "authentication"]
edition = "2021"
homepage = "https://github.com/build-trust/ockam"
keywords = ["ockam", "crypto", "encryption", "authentication"]
license = "Apache-2.0"
publish = true
readme = "README.md"
repository = "https://github.com/build-trust/ockam/tree/develop/implementations/rust/ockam/ockam_identity"
rust-version = "1.56.0"
description = """Ockam is a library for building devices that communicate securely, privately
and trustfully with cloud services and other devices.
"""

[features]
default = ["std", "software_vault"]
software_vault = ["ockam_vault"]
lease_proto_json = ["serde_json"]
OCKAM_XX_25519_AES256_GCM_SHA256 = [
  "ockam_vault/disable_default_noise_protocol",
  "ockam_vault/OCKAM_XX_25519_AES256_GCM_SHA256",
]
OCKAM_XX_25519_AES128_GCM_SHA256 = [
  "ockam_vault/disable_default_noise_protocol",
  "ockam_vault/OCKAM_XX_25519_AES128_GCM_SHA256",
]
OCKAM_XX_25519_ChaChaPolyBLAKE2s = [
  "ockam_vault/disable_default_noise_protocol",
  "ockam_vault/OCKAM_XX_25519_ChaChaPolyBLAKE2s",
]

# Feature (enabled by default): "std" enables functionality expected to
# be available on a standard platform.
std = [
  "alloc",
  "ockam_core/std",
  "ockam_macros/std",
  "ockam_node/std",
  "ockam_vault/std",
  "hex/std",
  "serde_bare/std",
  "minicbor/std",
  "time/std",
  "lmdb",
]

lmdb = ["tokio-retry", "lmdb-rkv"]

debugger = ["ockam_core/debugger"]

# Feature: "no_std" enables functionality required for platforms
# without the standard library.
no_std = [
  "ockam_core/no_std",
  "ockam_macros/no_std",
  "ockam_node/no_std",
  "ockam_vault/no_std",
]

# Feature: "alloc" enables support for heap allocation on "no_std"
# platforms, requires nightly.
alloc = [
  "ockam_core/alloc",
  "ockam_node/alloc",
  "ockam_vault/alloc",
  "hex/alloc",
  "serde_bare/alloc",
]

# Feature: "sqlite" enables functionality to use sqlite for identity and policy storage
sqlite = ["rusqlite"]

[dependencies]
arrayref = "0.3"
async-trait = "0.1.73"
cfg-if = "1.0.0"
delegate = "0.10.0"
group = { version = "0.13.0", default-features = false }
heapless = "0.7"
hex = { version = "0.4", default-features = false }
lmdb-rkv = { version = "0.14.0", optional = true }
minicbor = { version = "0.20.0", features = ["alloc", "derive"] }
ockam_core = { path = "../ockam_core", version = "^0.88.0", default-features = false }
ockam_macros = { path = "../ockam_macros", version = "^0.31.0", default-features = false }
ockam_node = { path = "../ockam_node", version = "^0.93.0", default-features = false }
ockam_vault = { path = "../ockam_vault", version = "^0.86.0", default-features = false, optional = true }
rand = { version = "0.8", default-features = false }
rusqlite = { version = "0.29.0", optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"] }
serde-big-array = "0.5"
serde_bare = { version = "0.5.0", default-features = false, features = ["alloc"] }
serde_json = { version = "1.0", optional = true }
sha2 = { version = "0.10", default-features = false }
subtle = { version = "2.4.1", default-features = false }
time = { version = "0.3.29", features = ["macros", "formatting", "std"], optional = true }
tokio-retry = { version = "0.3.0", default-features = false, optional = true }
tracing = { version = "0.1", default_features = false }

[dev-dependencies]
ockam_transport_tcp = { path = "../ockam_transport_tcp" }
ockam_vault = { path = "../ockam_vault" }
ockam_vault_aws = { path = "../ockam_vault_aws" }
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
rand_xorshift = "0"
serde_json = "1.0"
tempfile = { version = "3.8.0" }
tokio = { version = "1.33.0", features = ["full"] }
zeroize = { version = "1.4.2" }
