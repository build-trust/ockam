[package]
name = "ockam_app"
version = "0.1.0"
authors = ["Ockam Developers"]
categories = [
  "cryptography",
  "asynchronous",
  "authentication",
  "network-programming",
  "embedded",
]
default-run = "ockam_app"
edition = "2021"
homepage = "https://github.com/build-trust/ockam"
keywords = [
  "ockam",
  "crypto",
  "cryptography",
  "network-programming",
  "encryption",
]
license = "Apache-2.0"
publish = false
readme = "README.md"
repository = "https://github.com/build-trust/ockam/implementations/rust/ockam/ockam_app"
rust-version = "1.58.1"
description = "End-to-end encryption and mutual authentication for distributed applications."

[lib]
name = "ockam_app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]
path = "src/lib.rs"

[build-dependencies]
tauri-build = { version = "2.0.0-alpha.6", features = [] }

[dependencies]
duct = "0.13.6"
hex = { version = "0.4.3", default-features = false, features = ["alloc", "serde"] }
indoc = "2.0.3"
log = { version = "0.4.19", optional = true }
miette = { version = "5.10.0", features = ["fancy-no-backtrace"] }
muda = "0.8"
ockam = { path = "../ockam", version = "^0.90.0", features = ["software_vault"] }
ockam_api = { path = "../ockam_api", version = "0.33.0", features = ["std", "authenticators"] }
ockam_command = { path = "../ockam_command", version = "^0.90.0" }
ockam_core = { path = "../ockam_core", version = "^0.83.0" }
ockam_multiaddr = { path = "../ockam_multiaddr", version = "0.24.0", features = ["cbor", "serde"] }
open = "5"
percent-encoding = "2.3.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tauri = { version = "2.0.0-alpha.10", features = ["system-tray"] }
tauri-plugin-log = { version = "2.0.0-alpha.0", optional = true }
tauri-plugin-positioner = { version = "2.0.0-alpha.0", features = ["system-tray"] }
tauri-plugin-window = "2.0.0-alpha.0"
tauri-runtime = { version = "0.13.0-alpha.6", features = ["system-tray"] }
thiserror = "1.0.46"
tokio = { version = "1.31.0", features = ["time"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"], optional = true }

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]
default = ["invitations", "tracing"]
invitations = []
log = ["dep:log", "dep:tauri-plugin-log", "log/release_max_level_info", "tracing/log"]
release = ["invitations", "log"]
tracing = ["dep:tracing-subscriber", "tracing/log", "tracing/release_max_level_info"]
