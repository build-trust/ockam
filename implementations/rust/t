warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/channel/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/kex/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/vault/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/message/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/system/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/router/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/transport/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
warning: profiles for the non root package will be ignored, specify profiles at the workspace root:
package:   /Users/robinbudd/work/develop/implementations/rust/worker/Cargo.toml
workspace: /Users/robinbudd/work/develop/implementations/rust/Cargo.toml
   Compiling version_check v0.9.2
   Compiling proc-macro2 v1.0.24
   Compiling libc v0.2.80
   Compiling unicode-xid v0.2.1
   Compiling typenum v1.12.0
   Compiling syn v1.0.48
   Compiling cfg-if v0.1.10
   Compiling getrandom v0.1.15
   Compiling subtle v2.3.0
   Compiling autocfg v1.0.1
   Compiling ppv-lite86 v0.2.9
   Compiling radium v0.4.1
   Compiling opaque-debug v0.3.0
   Compiling byteorder v1.3.4
   Compiling wyz v0.2.0
   Compiling cfg-if v1.0.0
   Compiling adler v0.2.3
   Compiling funty v1.0.1
   Compiling log v0.4.11
   Compiling serde v1.0.117
   Compiling lazy_static v1.4.0
   Compiling cpuid-bool v0.1.2
   Compiling gimli v0.23.0
   Compiling signature v1.2.2
   Compiling failure_derive v0.1.8
   Compiling object v0.22.0
   Compiling rustc-demangle v0.1.18
   Compiling hex v0.4.2
   Compiling ockam-common v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/common)
   Compiling proc-macro-hack v0.5.19
   Compiling arrayref v0.3.6
   Compiling bitflags v1.2.1
   Compiling memchr v2.3.4
   Compiling proc-macro-nested v0.1.6
   Compiling core-foundation-sys v0.7.0
   Compiling futures-core v0.3.7
   Compiling once_cell v1.4.1
   Compiling futures-sink v0.3.7
   Compiling slab v0.4.2
   Compiling futures-io v0.3.7
   Compiling pin-utils v0.1.0
   Compiling ahash v0.4.6
   Compiling unicode-width v0.1.8
   Compiling unicode-segmentation v1.6.0
   Compiling crc32fast v1.2.1
   Compiling matches v0.1.8
   Compiling tinyvec v0.3.4
   Compiling native-tls v0.2.4
   Compiling cc v1.0.61
   Compiling remove_dir_all v0.5.3
   Compiling bytes v0.5.6
   Compiling itoa v0.4.6
   Compiling percent-encoding v2.1.0
   Compiling fnv v1.0.7
   Compiling wildmatch v1.0.12
   Compiling ed25519 v1.0.3
   Compiling generic-array v0.14.4
   Compiling proc-macro-error-attr v1.0.4
   Compiling proc-macro-error v1.0.4
   Compiling miniz_oxide v0.4.3
   Compiling futures-channel v0.3.7
   Compiling futures-task v0.3.7
   Compiling ockam-message v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/message)
   Compiling textwrap v0.11.0
   Compiling unicode-bidi v0.3.4
   Compiling hashbrown v0.9.1
   Compiling unicode-normalization v0.1.13
   Compiling heck v0.3.1
   Compiling http v0.2.1
   Compiling cmake v0.1.44
   Compiling ffi-support v0.4.2
   Compiling bitvec v0.18.4
   Compiling quote v1.0.7
   Compiling clap v2.33.3
   Compiling core-foundation v0.7.0
   Compiling security-framework-sys v0.4.3
   Compiling idna v0.2.0
   Compiling rand_core v0.5.1
   Compiling c_bindings v0.9.0 (/Users/robinbudd/work/develop/implementations/rust/c/bindings)
   Compiling rand_chacha v0.2.2
   Compiling security-framework v0.4.4
   Compiling rand v0.7.3
   Compiling flate2 v1.0.18
   Compiling url v2.1.1
   Compiling addr2line v0.14.0
   Compiling digest v0.9.0
   Compiling cipher v0.2.1
   Compiling block-buffer v0.9.0
   Compiling universal-hash v0.4.0
   Compiling crypto-mac v0.8.0
   Compiling aead v0.3.2
   Compiling sha2 v0.9.1
   Compiling polyval v0.4.1
   Compiling hmac v0.8.1
   Compiling aes-soft v0.6.2
   Compiling ctr v0.6.0
   Compiling ghash v0.3.0
   Compiling hkdf v0.9.0
   Compiling backtrace v0.3.54
   Compiling tempfile v3.1.0
   Compiling aes v0.6.0
   Compiling aes-gcm v0.8.0
   Compiling attohttpc v0.16.0
   Compiling ff v0.8.0
   Compiling group v0.8.0
   Compiling synstructure v0.12.4
   Compiling zeroize_derive v1.0.1
   Compiling pin-project-internal v1.0.1
   Compiling futures-macro v0.3.7
   Compiling structopt-derive v0.4.13
   Compiling zeroize v1.1.1
   Compiling failure v0.1.8
   Compiling curve25519-dalek v3.0.0
   Compiling elliptic-curve v0.6.6
   Compiling p256 v0.5.2
   Compiling pin-project v1.0.1
   Compiling structopt v0.3.20
   Compiling ed25519-dalek v1.0.1
   Compiling x25519-dalek v1.1.0
   Compiling futures-util v0.3.7
   Compiling xeddsa v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/xeddsa)
   Compiling ockam-vault v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/vault)
   Compiling ockam-system v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/system)
   Compiling ockam-kex v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/kex)
   Compiling ockam-router v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/router)
   Compiling ockam-worker v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/worker)
   Compiling ockam-channel v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/channel)
warning: unused variable: `key`
   --> channel/src/lib.rs:131:25
    |
131 |                         key,
    |                         ^^^ help: if this is intentional, prefix it with an underscore: `_key`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `recv_address`
   --> channel/src/lib.rs:232:13
    |
232 |         let recv_address = m.onward_route.addresses[0].address.clone();
    |             ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_recv_address`

warning: variable does not need to be mutable
   --> channel/src/lib.rs:129:25
    |
129 |                         mut route,
    |                         ----^^^^^
    |                         |
    |                         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> channel/src/lib.rs:222:31
    |
222 |     fn handle_recv(&mut self, mut m: Message) -> Result<(), ChannelError> {
    |                               ----^
    |                               |
    |                               help: remove this `mut`

warning: variable does not need to be mutable
   --> channel/src/lib.rs:305:21
    |
305 |         let (nonce, mut encrypted_msg) = u16::decode(&m.message_body).unwrap();
    |                     ----^^^^^^^^^^^^^
    |                     |
    |                     help: remove this `mut`

warning: variable does not need to be mutable
   --> channel/src/lib.rs:311:14
    |
311 |         let (mut decoded_msg, _) = Message::decode(&encoded_msg).unwrap();
    |              ----^^^^^^^^^^^
    |              |
    |              help: remove this `mut`

warning: variable does not need to be mutable
   --> channel/src/lib.rs:448:9
    |
448 |         mut route: Route,
    |         ----^^^^^
    |         |
    |         help: remove this `mut`

warning: unused `std::result::Result` that must be used
   --> channel/src/lib.rs:172:21
    |
172 |                     Message::encode(&m, &mut encoded_mb);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> channel/src/lib.rs:250:21
    |
250 |                     self.router_tx.send(Router(RouterCommand::SendMessage(m)));
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

   Compiling futures-executor v0.3.7
   Compiling futures v0.3.7
   Compiling ockam-transport v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/transport)
warning: 9 warnings emitted

   Compiling ockamd v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/daemon)
   Compiling ockam-node v0.1.0 (/Users/robinbudd/work/develop/implementations/rust/node)
warning: unused import: `Address`
 --> daemon/src/cli.rs:5:30
  |
5 | use ockam_message::message::{Address, Route, RouterAddress};
  |                              ^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `Address`
 --> daemon/src/config.rs:6:30
  |
6 | use ockam_message::message::{Address, Route};
  |                              ^^^^^^^

warning: unused import: `crate::cli::ChannelRole::Router`
 --> daemon/src/initiator.rs:7:5
  |
7 | use crate::cli::ChannelRole::Router;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `hex::encode`
 --> daemon/src/worker.rs:4:5
  |
4 | use hex::encode;
  |     ^^^^^^^^^^^

warning: unused variable: `channel`
   --> daemon/src/initiator.rs:104:13
    |
104 |         let channel = m.return_route.addresses[0].clone();
    |             ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_channel`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `resp_public_key`
   --> daemon/src/initiator.rs:113:13
    |
113 |         let resp_public_key = encode(&m.message_body);
    |             ^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_resp_public_key`

warning: field is never read: `worker_addr`
  --> daemon/src/initiator.rs:72:5
   |
72 |     worker_addr: RouterAddress,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: unused `std::result::Result` that must be used
  --> daemon/src/worker.rs:92:29
   |
92 | ...                   self.receive_channel(msg);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_must_use)]` on by default
   = note: this `Result` may be an `Err` variant, which should be handled

warning: 8 warnings emitted

   Compiling c_rust_memory v0.9.0 (/Users/robinbudd/work/develop/implementations/rust/c/rust_memory)
    Finished dev [unoptimized + debuginfo] target(s) in 32.72s
