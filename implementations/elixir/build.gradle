
def appsDir = 'ockam'

def apps = [
  'ockam',
  'ockam_transport_udp',
  'ockam_vault_software',
  'ockam_node_web'
]

def mixTasks = [
  [name: 'clean', dependsOnRust: false, dependsOnDepsGet: false],
  [name: 'deps.get', dependsOnRust: false, dependsOnDepsGet: false],
  [name: 'lint', dependsOnRust: true, dependsOnDepsGet: true],
  [name: 'compile', dependsOnRust: true, dependsOnDepsGet: true],
  [name: 'test', dependsOnRust: true, dependsOnDepsGet: true]
]

mixTasks.each {
  def mixTask = it
  def mixTaskName = mixTask.name
  def mixTaskCommand = ['mix', mixTaskName]

  // turn mix names like deps.get into gradle friendly deps_get
  def gradleTaskName = mixTaskName.replaceAll('\\.', '_')

  // use `build` as the name for all compile mix tasks
  // because that is expected by our higher level gradle projects.
  gradleTaskName = gradleTaskName == 'compile' ? 'build' : gradleTaskName

  // depend on rust build
  def appGradleTaskDeps = mixTask.dependsOnRust ? [gradle.includedBuild('rust').task(':build')] : []

  def gradleTaskDeps = []

  // define app specific gradle tasks
  apps.each {
    def app = it
    def appPath = java.nio.file.Paths.get(appsDir, app).toString()
    def appGradleTaskName = "${app}_mix_${gradleTaskName}"

    // depend on the corresponding app deps_get
    if(mixTask.dependsOnDepsGet) { appGradleTaskDeps.add("${app}_mix_deps_get") }

    task "${appGradleTaskName}"(type: Exec, group: appsDir, dependsOn: appGradleTaskDeps) {
      commandLine mixTaskCommand
      workingDir appPath
    }

    gradleTaskDeps.add(appGradleTaskName)
  }

  // define top level gradle task with all app specific tasks as dependencies.
  task "${gradleTaskName}" {
    group appsDir
    dependsOn gradleTaskDeps
  }
}
